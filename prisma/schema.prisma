generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model heroes {
  hero_id      Int            @id @default(autoincrement())
  hero_name    String         @unique @db.VarChar(100)
  lord_reports lord_reports[]
  reports      reports[]
}

model lord_reports {
  lord_report_id Int       @id @default(autoincrement())
  player_id      Int?
  hero_id        Int?
  user_ip        String    @db.VarChar(45)
  reported_at    DateTime? @default(now()) @db.Timestamp(6)
  heroes         heroes?   @relation(fields: [hero_id], references: [hero_id], onDelete: Cascade, onUpdate: NoAction)
  players        players?  @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: NoAction)
}

model players {
  player_id    Int            @id @default(autoincrement())
  username     String         @unique @db.VarChar(50)
  lord_reports lord_reports[]
  reports      reports[]
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reports {
  report_id   Int       @id @default(autoincrement())
  player_id   Int?
  hero_id     Int?
  rating      Int?
  comment     String?
  reported_at DateTime? @default(now()) @db.Timestamp(6)
  user_ip     String    @db.VarChar(45)
  heroes      heroes?   @relation(fields: [hero_id], references: [hero_id], onDelete: Cascade, onUpdate: NoAction)
  players     players?  @relation(fields: [player_id], references: [player_id], onDelete: Cascade, onUpdate: NoAction)
}

/// The underlying view does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
view player_hero_stats {
  player_id     Int?
  hero_id       Int?
  total_reports BigInt?
  avg_rating    Decimal? @db.Decimal
  lord_reports  BigInt?
  lord_status   String?

  @@ignore
}
